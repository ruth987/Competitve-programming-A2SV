from collections import deque

class MyCircularDeque:

    def __init__(self, k: int):
        self.circular_queue = deque()
        self.length = k

    def insertFront(self, value: int) -> bool:
        if len(self.circular_queue)< self.length:
            self.circular_queue.appendleft(value)
            return True
        return False
        

    def insertLast(self, value: int) -> bool:
        if len(self.circular_queue)< self.length:
            self.circular_queue.append(value)
            return True
        return False
        
        

    def deleteFront(self) -> bool:
        if self.circular_queue:
            del self.circular_queue[0]
            return True
        return False
        

    def deleteLast(self) -> bool:
        if self.circular_queue:
            del self.circular_queue[-1]
            return True
        return False
        

    def getFront(self) -> int:
        if self.circular_queue:
            return self.circular_queue[0]
        return -1
        

    def getRear(self) -> int:
        if self.circular_queue:
            return self.circular_queue[-1]
        return -1

    def isEmpty(self) -> bool:
        return len(self.circular_queue) == 0

    def isFull(self) -> bool:
        return len(self.circular_queue) == self.length
